#!/bin/sh
''''[ ! -z $VIRTUAL_ENV ] && exec python -u -- "$0" ${1+"$@"}; command -v python3 > /dev/null && exec python3 -u -- "$0" ${1+"$@"}; exec python2 -u -- "$0" ${1+"$@"} # '''

import sys
import os
import argparse
import shutil
import tempfile
import traceback

HERE = os.path.dirname(__file__)
READIES = os.path.abspath(os.path.join(HERE, ".."))
sys.path.insert(0, READIES)
import paella  # noqa: F401

os.environ["PYTHONWARNINGS"] = 'ignore:DEPRECATION::pip._internal.cli.base_command'

#----------------------------------------------------------------------------------------------

CMAKE_VER='3.19.0'

#----------------------------------------------------------------------------------------------

class CMakeSetup(paella.Setup):
    def __init__(self, args):
        paella.Setup.__init__(self, nop=args.nop)
        self.build = not (self.os == 'linux' and self.arch == 'x64' or self.os == 'macos')

    #------------------------------------------------------------------------------------------
    
    def common_first(self):
        self.install_downloaders()
        if self.build:
            self.install("unzip")
            self.run("%s/bin/getgcc" % READIES)

    def debian_compat(self):
        if self.build:
            self.install("libssl-dev")

    def redhat_compat(self):
        if self.build:
            self.install("openssl-dev")

    def fedora(self):
        self.redhat_compat()

    def macos(self):
        self.install("cmake")

    def linux_last(self):
        if not self.build:
            self.run(r"""
                url=https://github.com/Kitware/CMake/releases/download/v{CMAKE_VER}/cmake-{CMAKE_VER}-`uname`-`uname -m`.sh
                wget -q -O /tmp/cmake.sh $url
                sh /tmp/cmake.sh --skip-license --prefix=/usr/local
                rm -f /tmp/cmake.sh
                """.format(CMAKE_VER=CMAKE_VER), output_on_error=True)
        else:
            self.run(r"""
                cd /tmp
                cmake_dir=$(mktemp -d)
                cd $cmake_dir
                wget -q -O cmake.zip https://github.com/Kitware/CMake/archive/v{CMAKE_VER}.zip
                unzip -q cmake.zip
                cd CMake-{CMAKE_VER}/
                ./bootstrap
                make -j`nproc`
                make install
                cd /tmp
                rm -rf $cmake_dir
                """.format(CMAKE_VER=CMAKE_VER), output_on_error=True)

#----------------------------------------------------------------------------------------------

parser = argparse.ArgumentParser(description='Install CMake')
parser.add_argument('-n', '--nop', action="store_true", help='no operation')
args = parser.parse_args()

try:
    CMakeSetup(args).setup()
except Exception as x:
    traceback.print_exc()
    fatal(str(x))

exit(0)
