#!/bin/sh
''''[ ! -z $VIRTUAL_ENV ] && exec python -u -- "$0" ${1+"$@"}; command -v python3 > /dev/null && exec python3 -u -- "$0" ${1+"$@"}; exec python2 -u -- "$0" ${1+"$@"} # '''

import sys
import os
import argparse
import shutil
import tempfile
import traceback

HERE = os.path.dirname(__file__)
READIES = os.path.abspath(os.path.join(HERE, ".."))
sys.path.insert(0, READIES)
import paella  # noqa: F401

os.environ["PYTHONWARNINGS"] = 'ignore:DEPRECATION::pip._internal.cli.base_command'

CLANG_FORMAT_BASE_URL = "https://github.com/muttleyxd/clang-tools-static-binaries/releases/download/master-22538c65"

#----------------------------------------------------------------------------------------------

class CLangSetup(paella.Setup):
    def __init__(self, args):
        paella.Setup.__init__(self, nop=args.nop)
        self.format = args.format

    def common_first(self):
        self.install_downloaders()

    def linux(self):
        if self.format and self.arch == 'x64':
            self.run("wget -O /usr/local/bin/clang-format-10 %s/clang-format-10_linux-amd64" % CLANG_FORMAT_BASE_URL)

    def macos(self):
        if self.format and self.arch == 'x64':
            self.run("wget -O /usr/local/bin/clang-format-10 %s/clang-format-10_macosx-amd64" % CLANG_FORMAT_BASE_URL)

    def common_last(self):
        if self.format and self.arch == 'x64':
            self.run("chmod +x /usr/local/bin/clang-format-10")
            self.run("ln -sf /usr/local/bin/clang-format-10 /usr/local/bin/clang-format")

#----------------------------------------------------------------------------------------------

parser = argparse.ArgumentParser(description='Install CLang tools')
parser.add_argument('-n', '--nop', action="store_true", help='no operation')
parser.add_argument('--format', action="store_true", default=False, help='Install clang-format')
args = parser.parse_args()

try:
    CLangSetup(args).setup()
except Exception as x:
    traceback.print_exc()
    fatal(str(x))

exit(0)
